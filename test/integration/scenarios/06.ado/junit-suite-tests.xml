<?xml version="1.0" encoding="UTF-8"?>
  <testsuites tests="30" disabled="1" errors="0" failures="0" time="1145.673206337">
      <testsuite name="Scenarios Suite" package="/mnt/d/code/symphony/test/integration/scenarios/06.ado" tests="30" disabled="1" skipped="0" errors="0" failures="0" time="1145.673206337" timestamp="2025-01-23T21:03:02">
          <properties>
              <property name="SuiteSucceeded" value="true"></property>
              <property name="SuiteHasProgrammaticFocus" value="false"></property>
              <property name="SpecialSuiteFailureReason" value=""></property>
              <property name="SuiteLabels" value="[]"></property>
              <property name="RandomSeed" value="1737637374"></property>
              <property name="RandomizeAllSpecs" value="false"></property>
              <property name="LabelFilter" value=""></property>
              <property name="FocusStrings" value=""></property>
              <property name="SkipStrings" value=""></property>
              <property name="FocusFiles" value=""></property>
              <property name="SkipFiles" value=""></property>
              <property name="FailOnPending" value="false"></property>
              <property name="FailFast" value="false"></property>
              <property name="FlakeAttempts" value="0"></property>
              <property name="DryRun" value="false"></property>
              <property name="ParallelTotal" value="1"></property>
              <property name="OutputInterceptorMode" value=""></property>
          </properties>
          <testcase name="[BeforeSuite]" classname="Scenarios Suite" status="passed" time="5.076641504">
              <system-err>&gt; Enter [BeforeSuite] TOP-LEVEL - /mnt/d/code/symphony/test/integration/scenarios/06.ado/suite_test.go:53 @ 01/23/25 21:03:02.069&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploy�[0m&#xA;Deploying symphony to minikube&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (425.932565ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; has been upgraded. Happy Helming!&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:03:04 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 2&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;&lt; Exit [BeforeSuite] TOP-LEVEL - /mnt/d/code/symphony/test/integration/scenarios/06.ado/suite_test.go:53 @ 01/23/25 21:03:07.145 (5.077s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should deploy empty target and solution" classname="Scenarios Suite" status="passed" time="15.246334841">
              <system-err>&gt; Enter [BeforeAll] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:38 @ 01/23/25 21:03:07.155&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:39 @ 01/23/25 21:03:07.156&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploy�[0m&#xA;Deploying symphony to minikube&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (348.867547ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; has been upgraded. Happy Helming!&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:03:09 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 3&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;STEP: setting the default testing lib logger - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:42 @ 01/23/25 21:03:11.98&#xA;&lt; Exit [BeforeAll] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:38 @ 01/23/25 21:03:11.98 (4.825s)&#xA;&gt; Enter [It] it should deploy empty target and solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:115 @ 01/23/25 21:03:11.98&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:03:11.98&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution created&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:03:12.08&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:03:12.08&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:03:12.08&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:03:12.08&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:03:12.167&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:03:12.268&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should deploy empty target and solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:115 @ 01/23/25 21:03:22.401 (10.421s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:03:22.401&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:03:22.401 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should update the target with a simple helm chart" classname="Scenarios Suite" status="passed" time="20.640569433">
              <system-err>&gt; Enter [It] it should update the target with a simple helm chart - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:125 @ 01/23/25 21:03:22.401&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:03:22.401&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:03:22.536&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:03:22.536&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:03:22.536&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:03:22.536&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:03:22.672&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:03:22.819&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 3: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 3 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 3: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 3 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 3: [helm expectation: ^simple-chart-1$]&#xA;  [helm expectation: ^simple-chart-1$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-1$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-1$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-1$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 3 was satisfied [helm expectation: ^simple-chart-1$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should update the target with a simple helm chart - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:125 @ 01/23/25 21:03:43.04 (20.641s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:03:43.04&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:03:43.041 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should deploy another simple helm chart in the solution so there are 2 helm releases" classname="Scenarios Suite" status="passed" time="30.650010751">
              <system-err>&gt; Enter [It] it should deploy another simple helm chart in the solution so there are 2 helm releases - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:142 @ 01/23/25 21:03:43.041&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:03:43.041&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:03:43.19&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:03:43.19&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:03:43.19&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:03:43.19&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:03:43.344&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:03:43.488&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 5: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 5 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 5: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 5 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 5: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 5 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 5: [helm expectation: ^simple-chart-1$]&#xA;  [helm expectation: ^simple-chart-1$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-1$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-1$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-1$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-1$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 4 of 5 was satisfied [helm expectation: ^simple-chart-1$]&#xA;[all expectation]: checking expectation 5 of 5: [helm expectation: ^simple-chart-2$]&#xA;  [helm expectation: ^simple-chart-2$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-2$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-2$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-2$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-2$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-2$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 5 of 5 was satisfied [helm expectation: ^simple-chart-2$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should deploy another simple helm chart in the solution so there are 2 helm releases - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:142 @ 01/23/25 21:04:13.689 (30.65s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:04:13.689&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:04:13.689 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should add a kubernetes config map in the solution" classname="Scenarios Suite" status="passed" time="40.613968605">
              <system-err>&gt; Enter [It] it should add a kubernetes config map in the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:169 @ 01/23/25 21:04:13.689&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:04:13.689&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:04:13.833&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:04:13.833&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:04:13.833&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:04:13.833&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:04:13.985&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:04:14.133&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 4: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 4 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 4: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 4 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 4: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 4 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 4: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 4 of 4 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should add a kubernetes config map in the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:169 @ 01/23/25 21:04:54.301 (40.614s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:04:54.301&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:04:54.301 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should add a kubernetes clusterrole in the target" classname="Scenarios Suite" status="passed" time="40.570082873">
              <system-err>&gt; Enter [It] it should add a kubernetes clusterrole in the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:195 @ 01/23/25 21:04:54.301&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:04:54.301&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:04:54.416&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:04:54.416&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:04:54.416&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:04:54.416&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:04:54.569&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:04:54.699&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 5: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 5 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 5: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 5 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 5: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 5 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 5: [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: --------------------------------------------------------------------------------&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Verifying resource&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 4 of 5 was satisfied [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;[all expectation]: checking expectation 5 of 5: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 5 of 5 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should add a kubernetes clusterrole in the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:195 @ 01/23/25 21:05:34.869 (40.57s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:05:34.869&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:05:34.869 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should should just update the operation id when a no-op change is made" classname="Scenarios Suite" status="passed" time="30.671564399">
              <system-err>&gt; Enter [It] it should should just update the operation id when a no-op change is made - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:223 @ 01/23/25 21:05:34.869&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:05:34.869&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:05:35.05&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:05:35.05&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:05:35.05&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:05:35.05&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:05:35.175&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:05:35.32&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 5: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 5 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 5: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 5 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 5: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 5 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 5: [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: --------------------------------------------------------------------------------&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Verifying resource&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 4 of 5 was satisfied [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;[all expectation]: checking expectation 5 of 5: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 5 of 5 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should should just update the operation id when a no-op change is made - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:223 @ 01/23/25 21:06:05.539 (30.672s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:05.539&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:05.539 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations It should update remove the clusterrole from the target" classname="Scenarios Suite" status="passed" time="30.614539769">
              <system-err>&gt; Enter [It] It should update remove the clusterrole from the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:251 @ 01/23/25 21:06:05.539&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:06:05.539&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:06:05.653&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:06:05.653&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:06:05.654&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:06:05.654&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:06:05.788&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:06:05.949&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 5: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 5 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 5: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 5 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 5: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 2 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 5 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 5: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 4 of 5 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: checking expectation 5 of 5: [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: --------------------------------------------------------------------------------&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Verifying resource&#xA;  [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]: Resource matches returned. 0 matches&#xA;[all expectation]: expectation 5 of 5 was satisfied [rbac.authorization.k8s.io/v1, Kind=ClusterRole: ^basic-clusterrole$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] It should update remove the clusterrole from the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:251 @ 01/23/25 21:06:36.152 (30.615s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:36.152&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:36.152 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations It should update remove the simple-helmchart-2 from the solution" classname="Scenarios Suite" status="passed" time="20.541402295">
              <system-err>&gt; Enter [It] It should update remove the simple-helmchart-2 from the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:279 @ 01/23/25 21:06:36.152&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:06:36.152&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:06:36.259&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:06:36.259&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:06:36.259&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:06:36.259&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:06:36.378&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:06:36.519&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 6: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 6 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 6: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 6 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 6: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 6 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 6: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;[all expectation]: expectation 4 of 6 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: checking expectation 5 of 6: [helm expectation: ^simple-chart-1$]&#xA;  [helm expectation: ^simple-chart-1$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-1$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-1$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-1$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 5 of 6 was satisfied [helm expectation: ^simple-chart-1$]&#xA;[all expectation]: checking expectation 6 of 6: [helm expectation: ^simple-chart-2$]&#xA;  [helm expectation: ^simple-chart-2$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-2$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-2$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-2$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-2$]: Found 0 matching releases&#xA;  [helm expectation: ^simple-chart-2$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 6 of 6 was satisfied [helm expectation: ^simple-chart-2$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] It should update remove the simple-helmchart-2 from the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:279 @ 01/23/25 21:06:56.694 (20.541s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:56.694&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:06:56.694 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations It should update the simple-config-map-1 with new data" classname="Scenarios Suite" status="passed" time="20.569404782">
              <system-err>&gt; Enter [It] It should update the simple-config-map-1 with new data - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:308 @ 01/23/25 21:06:56.694&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:06:56.694&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:06:56.807&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:06:56.807&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:06:56.807&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:06:56.807&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:06:56.926&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:06:57.083&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 6: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 6 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 6: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 6 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 3 of 6: [helm expectation: ^simple-chart-.*$]&#xA;  [helm expectation: ^simple-chart-.*$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-.*$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-.*$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-.*$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-.*$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 2: [basic condition]&#xA;    [all group]: condition 1 of 2 was satisfied: [basic condition]&#xA;    [all group]: checking condition 2 of 2: [basic condition]&#xA;    [all group]: condition 2 of 2 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 6 was satisfied [helm expectation: ^simple-chart-.*$]&#xA;[all expectation]: checking expectation 4 of 6: [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: --------------------------------------------------------------------------------&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Verifying resource&#xA;  [/v1, Kind=ConfigMap: ^basic-configmap-1$]: Resource matches returned. 1 matches&#xA;    [.data.key]: Evaluating jq condition on resource&#xA;    [.data.key]: Comparing value-modified with value-modified&#xA;[all expectation]: expectation 4 of 6 was satisfied [/v1, Kind=ConfigMap: ^basic-configmap-1$]&#xA;[all expectation]: checking expectation 5 of 6: [helm expectation: ^simple-chart-1$]&#xA;  [helm expectation: ^simple-chart-1$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-1$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-1$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-1$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 5 of 6 was satisfied [helm expectation: ^simple-chart-1$]&#xA;[all expectation]: checking expectation 6 of 6: [helm expectation: ^simple-chart-2$]&#xA;  [helm expectation: ^simple-chart-2$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-2$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-2$]: Found 1 releases&#xA;  [helm expectation: ^simple-chart-2$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-2$]: Found 0 matching releases&#xA;  [helm expectation: ^simple-chart-2$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 6 of 6 was satisfied [helm expectation: ^simple-chart-2$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] It should update the simple-config-map-1 with new data - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:308 @ 01/23/25 21:07:17.262 (20.569s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:17.262&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:17.262 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should fail the target when component is invalid" classname="Scenarios Suite" status="passed" time="10.567489097">
              <system-err>&gt; Enter [It] it should fail the target when component is invalid - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:340 @ 01/23/25 21:07:17.262&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:07:17.262&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:07:17.416&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:07:17.416&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:07:17.416&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:07:17.416&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:07:17.539&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:07:17.668&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should fail the target when component is invalid - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:340 @ 01/23/25 21:07:27.829 (10.567s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:27.829&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:27.829 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should fail the solution when component is invalid" classname="Scenarios Suite" status="passed" time="20.581011629">
              <system-err>&gt; Enter [It] it should fail the solution when component is invalid - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:356 @ 01/23/25 21:07:27.829&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:07:27.829&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:07:27.943&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:07:27.943&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:07:27.943&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:07:27.943&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:07:28.067&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:07:28.22&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should fail the solution when component is invalid - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:356 @ 01/23/25 21:07:48.409 (20.581s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:48.409&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:48.409 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should update the target with a simple http" classname="Scenarios Suite" status="passed" time="10.572227866">
              <system-err>&gt; Enter [It] it should update the target with a simple http - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:375 @ 01/23/25 21:07:48.409&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:07:48.409&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:07:48.542&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:07:48.543&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:07:48.543&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:07:48.543&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:07:48.662&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:07:48.823&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 1: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 1 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should update the target with a simple http - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:375 @ 01/23/25 21:07:58.981 (10.572s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:58.981&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:07:58.981 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should fail to update target with an invalid simple http" classname="Scenarios Suite" status="passed" time="10.561681813">
              <system-err>&gt; Enter [It] it should fail to update target with an invalid simple http - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:390 @ 01/23/25 21:07:58.981&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:07:58.981&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:07:59.106&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:07:59.106&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:07:59.106&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:07:59.106&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:07:59.229&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:07:59.376&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 1: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 1 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should fail to update target with an invalid simple http - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:390 @ 01/23/25 21:08:09.541 (10.562s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:09.541&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:09.541 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes when performing create/update operations it should install the resources in the correct dependency order" classname="Scenarios Suite" status="pending" time="0">
              <skipped message="pending"></skipped>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with component constraints when performing create/update operations should succeed when the component is deployed to a target with matching constraint" classname="Scenarios Suite" status="passed" time="10.554013389">
              <system-err>&gt; Enter [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:09.541&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:426 @ 01/23/25 21:08:09.541&#xA;&lt; Exit [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:09.541 (0s)&#xA;&gt; Enter [It] should succeed when the component is deployed to a target with matching constraint - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:438 @ 01/23/25 21:08:09.541&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:08:09.541&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:08:09.655&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:08:09.655&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:08:09.655&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:08:09.655&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:08:09.795&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:08:09.937&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] should succeed when the component is deployed to a target with matching constraint - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:438 @ 01/23/25 21:08:20.095 (10.554s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:20.095&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:20.095 (0s)&#xA;&gt; Enter [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:20.095&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:433 @ 01/23/25 21:08:20.095&#xA;&lt; Exit [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:20.095 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with component constraints when performing create/update operations should remove config map when the component is removed from the target" classname="Scenarios Suite" status="passed" time="10.812857699">
              <system-err>&gt; Enter [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:20.096&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:426 @ 01/23/25 21:08:20.096&#xA;&lt; Exit [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:20.096 (0s)&#xA;&gt; Enter [It] should remove config map when the component is removed from the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:445 @ 01/23/25 21:08:20.096&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:08:20.096&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:08:20.461&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:08:20.461&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:08:20.461&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:08:20.461&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:08:20.581&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:08:20.744&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] should remove config map when the component is removed from the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:445 @ 01/23/25 21:08:30.908 (10.813s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:30.908&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:30.908 (0s)&#xA;&gt; Enter [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:30.908&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:433 @ 01/23/25 21:08:30.908&#xA;&lt; Exit [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:30.908 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with component constraints when performing create/update operations should fail when the component constraint references nonexistent property" classname="Scenarios Suite" status="passed" time="0.553096125">
              <system-err>&gt; Enter [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:30.908&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:426 @ 01/23/25 21:08:30.908&#xA;&lt; Exit [BeforeEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:425 @ 01/23/25 21:08:30.908 (0s)&#xA;&gt; Enter [It] should fail when the component constraint references nonexistent property - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:452 @ 01/23/25 21:08:30.908&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:08:30.909&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:08:31.028&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:08:31.028&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:08:31.028&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:08:31.028&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:08:31.15&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:08:31.298&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Failed with Failed&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] should fail when the component constraint references nonexistent property - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:452 @ 01/23/25 21:08:31.461 (553ms)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:31.461&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:31.462 (0s)&#xA;&gt; Enter [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:31.462&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:433 @ 01/23/25 21:08:31.462&#xA;&lt; Exit [AfterEach] with component constraints - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:432 @ 01/23/25 21:08:31.462 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with templated expressions when performing create/update operations with templated expressions it should succeed when the component is deployed to a target with existing properties" classname="Scenarios Suite" status="passed" time="20.619416744">
              <system-err>&gt; Enter [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:08:31.462&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:466 @ 01/23/25 21:08:31.462&#xA;&lt; Exit [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:08:31.462 (0s)&#xA;&gt; Enter [It] it should succeed when the component is deployed to a target with existing properties - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:479 @ 01/23/25 21:08:31.462&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:08:31.462&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:08:31.605&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:08:31.606&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:08:31.606&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:08:31.606&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:08:31.763&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:08:31.921&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] it should succeed when the component is deployed to a target with existing properties - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:479 @ 01/23/25 21:08:52.079 (20.619s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:52.079&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:08:52.079 (0s)&#xA;&gt; Enter [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:08:52.079&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:474 @ 01/23/25 21:08:52.079&#xA;&lt; Exit [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:08:52.079 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with templated expressions when performing create/update operations with templated expressions it should fail when the component is deployed to a target with non-existing properties" classname="Scenarios Suite" status="passed" time="10.643828059">
              <system-err>&gt; Enter [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:08:52.079&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:466 @ 01/23/25 21:08:52.079&#xA;&lt; Exit [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:08:52.079 (0s)&#xA;&gt; Enter [It] it should fail when the component is deployed to a target with non-existing properties - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:486 @ 01/23/25 21:08:52.079&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:08:52.079&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:08:52.203&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:08:52.203&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:08:52.203&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:08:52.203&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:08:52.407&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:08:52.554&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Failed with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Failed, got Reconciling&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;[fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Failed with Failed&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] it should fail when the component is deployed to a target with non-existing properties - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:486 @ 01/23/25 21:09:02.722 (10.644s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:02.722&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:02.722 (0s)&#xA;&gt; Enter [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:02.722&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:474 @ 01/23/25 21:09:02.722&#xA;&lt; Exit [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:02.722 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with templated expressions when performing create/update operations with templated expressions it should succeed when solution component has a valid expression" classname="Scenarios Suite" status="passed" time="20.550431904">
              <system-err>&gt; Enter [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:09:02.722&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:466 @ 01/23/25 21:09:02.722&#xA;&lt; Exit [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:09:02.722 (0s)&#xA;&gt; Enter [It] it should succeed when solution component has a valid expression - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:493 @ 01/23/25 21:09:02.722&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:09:02.722&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:09:02.839&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:09:02.839&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:09:02.839&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:09:02.839&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:09:02.97&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:09:03.118&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should succeed when solution component has a valid expression - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:493 @ 01/23/25 21:09:23.272 (20.55s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:23.272&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:23.272 (0s)&#xA;&gt; Enter [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:23.272&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:474 @ 01/23/25 21:09:23.272&#xA;&lt; Exit [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:23.272 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with templated expressions when performing create/update operations with templated expressions it should fail solution component has an invalid expression" classname="Scenarios Suite" status="passed" time="30.600704058">
              <system-err>&gt; Enter [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:09:23.272&#xA;STEP: setting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:466 @ 01/23/25 21:09:23.272&#xA;&lt; Exit [BeforeEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:465 @ 01/23/25 21:09:23.272 (0s)&#xA;&gt; Enter [It] it should fail solution component has an invalid expression - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:504 @ 01/23/25 21:09:23.272&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:09:23.273&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:09:23.403&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:09:23.403&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:09:23.403&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:09:23.403&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:09:23.55&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:09:23.692&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should fail solution component has an invalid expression - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:504 @ 01/23/25 21:09:53.871 (30.601s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:53.871&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:09:53.871 (0s)&#xA;&gt; Enter [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:53.872&#xA;STEP: resetting the default target props - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:474 @ 01/23/25 21:09:53.872&#xA;&lt; Exit [AfterEach] with templated expressions - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:473 @ 01/23/25 21:09:53.872 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with instance parameters when performing create/update operations should succeed when the solution component is deployed to a target with the instance parameters" classname="Scenarios Suite" status="passed" time="20.575101556">
              <system-err>&gt; Enter [BeforeEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:519 @ 01/23/25 21:09:53.872&#xA;STEP: setting the default instance params - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:520 @ 01/23/25 21:09:53.872&#xA;&lt; Exit [BeforeEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:519 @ 01/23/25 21:09:53.872 (0s)&#xA;&gt; Enter [It] should succeed when the solution component is deployed to a target with the instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:533 @ 01/23/25 21:09:53.872&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:09:53.872&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:09:54.005&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:09:54.005&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:09:54.005&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:09:54.005&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:09:54.14&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:09:54.289&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] should succeed when the solution component is deployed to a target with the instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:533 @ 01/23/25 21:10:14.446 (20.575s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:10:14.446&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:10:14.446 (0s)&#xA;&gt; Enter [AfterEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:527 @ 01/23/25 21:10:14.446&#xA;STEP: resetting the default instance params - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:528 @ 01/23/25 21:10:14.446&#xA;&lt; Exit [AfterEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:527 @ 01/23/25 21:10:14.446 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create resources with sequential changes with instance parameters when performing create/update operations should fail when the solution component with missing parameter is deployed to a target" classname="Scenarios Suite" status="passed" time="58.359901152">
              <system-err>&gt; Enter [BeforeEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:519 @ 01/23/25 21:10:14.446&#xA;STEP: setting the default instance params - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:520 @ 01/23/25 21:10:14.446&#xA;&lt; Exit [BeforeEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:519 @ 01/23/25 21:10:14.446 (0s)&#xA;&gt; Enter [It] should fail when the solution component with missing parameter is deployed to a target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:540 @ 01/23/25 21:10:14.446&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:63 @ 01/23/25 21:10:14.446&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:69 @ 01/23/25 21:10:14.565&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:85 @ 01/23/25 21:10:14.565&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:91 @ 01/23/25 21:10:14.565&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:97 @ 01/23/25 21:10:14.565&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:101 @ 01/23/25 21:10:14.683&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:105 @ 01/23/25 21:10:14.843&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Failed with Reconciling&#xA;  [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Failed, got Reconciling&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;[solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;  [all group]: checking if all conditions are satisfied&#xA;  [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;    [Provisioning Status]: Evaluating jq condition on resource&#xA;    [Provisioning Status]: Comparing Failed with Failed&#xA;  [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;  [all group]: all conditions were satisfied&#xA;&lt; Exit [It] should fail when the solution component with missing parameter is deployed to a target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:540 @ 01/23/25 21:10:25.002 (10.556s)&#xA;&gt; Enter [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:10:25.002&#xA;&lt; Exit [JustAfterEach] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:53 @ 01/23/25 21:10:25.002 (0s)&#xA;&gt; Enter [AfterEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:527 @ 01/23/25 21:10:25.002&#xA;STEP: resetting the default instance params - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:528 @ 01/23/25 21:10:25.002&#xA;&lt; Exit [AfterEach] with instance parameters - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:527 @ 01/23/25 21:10:25.002 (0s)&#xA;&gt; Enter [AfterAll] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:46 @ 01/23/25 21:10:25.002&#xA;STEP: uninstalling orchestrator from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:47 @ 01/23/25 21:10:25.002&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage DumpSymphonyLogsForTest ginkgosuite_createUpdate�[0m&#xA;&gt; mkdir -p /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025/api.log&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default --previous &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025/api-crash.log&#xA;&gt; kubectl logs &#39;deployment/symphony-controller-manager&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025/k8s.log&#xA;&gt; kubectl logs &#39;deployment/symphony-otel-collector&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025/otel-collector.log&#xA;Cannot collect otel-collector logs: exit status 1, it&#39;s ok when otel-collector is not deployed&#xA;&gt; kubectl logs &#39;ds/symphony-otel-forwarder&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_createUpdate_20250123211025/otel-forwarder.log&#xA;Cannot to collect otel-forwarder logs: exit status 1, it&#39;s ok when otel-forwarder is not deployed&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage Destroy all,nowait�[0m&#xA;&gt; helm uninstall ecosystem -n default --wait&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;release &#34;ecosystem&#34; uninstalled&#xA;Waiting for all pods to go away...&#xA;All pods are cleaned up:  29.389398664s&#xA;&lt; Exit [AfterAll] Create resources with sequential changes - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_test.go:46 @ 01/23/25 21:11:12.803 (47.804s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Create/update resources for rollback testing fail to deploy solution v2 then rollback to v1 with a single component" classname="Scenarios Suite" status="passed" time="178.851677687">
              <system-err>&gt; Enter [BeforeAll] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:34 @ 01/23/25 21:11:12.803&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:35 @ 01/23/25 21:11:12.803&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploy�[0m&#xA;Deploying symphony to minikube&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (388.591347ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; does not exist. Installing it now.&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:11:15 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 1&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;STEP: setting the default testing lib logger - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:38 @ 01/23/25 21:12:39.573&#xA;&lt; Exit [BeforeAll] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:34 @ 01/23/25 21:12:39.573 (1m26.773s)&#xA;&gt; Enter [It] with a single component - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:140 @ 01/23/25 21:12:39.573&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:59 @ 01/23/25 21:12:39.573&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution created&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:65 @ 01/23/25 21:12:39.689&#xA;STEP: setting the components for Solution V1 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:77 @ 01/23/25 21:12:39.689&#xA;STEP: preparing the instance bytes with a new operation id for Solution V1 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:83 @ 01/23/25 21:12:39.689&#xA;STEP: deploying the Target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:87 @ 01/23/25 21:12:39.689&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying Solution V1 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:91 @ 01/23/25 21:12:39.798&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the Instance that references Solution V1 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:95 @ 01/23/25 21:12:39.922&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: setting the components for Solution V2, an invalid solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:99 @ 01/23/25 21:12:40.031&#xA;STEP: deploying Solution V2 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:106 @ 01/23/25 21:12:40.031&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v2 created&#xA;STEP: preparing the instance bytes with a new operation id for Solution V2 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:110 @ 01/23/25 21:12:40.123&#xA;STEP: updating the Instance to use Solution V2 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:116 @ 01/23/25 21:12:40.123&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;STEP: verifying deployment of Instance referencing Solution V2 fails - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:120 @ 01/23/25 21:12:40.426&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 1: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Failed, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Failed with Failed&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 1 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;STEP: reverting the Instance to use Solution V1 - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:124 @ 01/23/25 21:13:00.447&#xA;STEP: Deploying the Instance to use Solution V1 again - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:130 @ 01/23/25 21:13:00.447&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance configured&#xA;STEP: verifying deployment of Instance referencing Solution V1 succeeds - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:134 @ 01/23/25 21:13:00.588&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 1: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Failed&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Failed&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Failed&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 1 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] with a single component - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:140 @ 01/23/25 21:13:30.592 (51.022s)&#xA;&gt; Enter [JustAfterEach] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:49 @ 01/23/25 21:13:30.592&#xA;&lt; Exit [JustAfterEach] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:49 @ 01/23/25 21:13:30.592 (0s)&#xA;&gt; Enter [AfterAll] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:42 @ 01/23/25 21:13:30.592&#xA;STEP: uninstalling orchestrator from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:43 @ 01/23/25 21:13:30.592&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage DumpSymphonyLogsForTest ginkgosuite_fallback�[0m&#xA;&gt; mkdir -p /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331/api.log&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default --previous &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331/api-crash.log&#xA;&gt; kubectl logs &#39;deployment/symphony-controller-manager&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331/k8s.log&#xA;&gt; kubectl logs &#39;deployment/symphony-otel-collector&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331/otel-collector.log&#xA;Cannot collect otel-collector logs: exit status 1, it&#39;s ok when otel-collector is not deployed&#xA;&gt; kubectl logs &#39;ds/symphony-otel-forwarder&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_fallback_20250123211331/otel-forwarder.log&#xA;Cannot to collect otel-forwarder logs: exit status 1, it&#39;s ok when otel-forwarder is not deployed&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage Destroy all,nowait�[0m&#xA;&gt; helm uninstall ecosystem -n default --wait&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;release &#34;ecosystem&#34; uninstalled&#xA;Waiting for all pods to go away...&#xA;All pods are cleaned up:  29.572353158s&#xA;&lt; Exit [AfterAll] Create/update resources for rollback testing - /mnt/d/code/symphony/test/integration/scenarios/06.ado/create_update_fallback_test.go:42 @ 01/23/25 21:14:11.646 (41.057s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] RBAC when orchestrator is installed as cluster admin when performing CRUD operations it succefully install in default namespace" classname="Scenarios Suite" status="passed" time="143.703207175">
              <system-err>&gt; Enter [BeforeAll] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:81 @ 01/23/25 21:14:11.646&#xA;STEP: setting the default testing lib logger - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:82 @ 01/23/25 21:14:11.646&#xA;&lt; Exit [BeforeAll] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:81 @ 01/23/25 21:14:11.646 (0s)&#xA;&gt; Enter [BeforeAll] when orchestrator is installed as cluster admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:101 @ 01/23/25 21:14:11.646&#xA;STEP: setting the install values - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:102 @ 01/23/25 21:14:11.646&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:111 @ 01/23/25 21:14:11.646&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploywithsettings &#39;--set rbac.cluster.admin=true&#39;�[0m&#xA;Deploying symphony to minikube with settings, --set rbac.cluster.admin=true&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (352.778261ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest --set rbac.cluster.admin=true&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; does not exist. Installing it now.&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:14:13 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 1&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;&lt; Exit [BeforeAll] when orchestrator is installed as cluster admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:101 @ 01/23/25 21:15:44.376 (1m32.735s)&#xA;&gt; Enter [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:123 @ 01/23/25 21:15:44.376&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:39 @ 01/23/25 21:15:44.376&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution created&#xA;STEP: setting the components for the target and scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:45 @ 01/23/25 21:15:44.597&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:52 @ 01/23/25 21:15:44.597&#xA;STEP: setting the instance scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:58 @ 01/23/25 21:15:44.597&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:64 @ 01/23/25 21:15:44.597&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:68 @ 01/23/25 21:15:44.71&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:72 @ 01/23/25 21:15:44.824&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: verifying the resources - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:76 @ 01/23/25 21:15:44.918&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:123 @ 01/23/25 21:16:14.933 (30.559s)&#xA;&gt; Enter [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:16:14.933&#xA;&lt; Exit [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:16:14.933 (0s)&#xA;&gt; Enter [AfterAll] when orchestrator is installed as cluster admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:116 @ 01/23/25 21:16:14.933&#xA;STEP: removing all instances, targets and solutions from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:117 @ 01/23/25 21:16:14.933&#xA;�[35m&gt;�[0m�[1m kubectl delete instances.solution.symphony --all -A�[0m&#xA;instance.solution.symphony &#34;instance&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete targets.fabric.symphony --all -A�[0m&#xA;target.fabric.symphony &#34;target&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete solutions.solution.symphony --all -A�[0m&#xA;solution.solution.symphony &#34;solution-v-v1&#34; deleted&#xA;&lt; Exit [AfterAll] when orchestrator is installed as cluster admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:116 @ 01/23/25 21:16:35.341 (20.409s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] RBAC when orchestrator is installed as namespace admin when performing CRUD operations it succefully install in default namespace" classname="Scenarios Suite" status="passed" time="45.954377725">
              <system-err>&gt; Enter [BeforeAll] when orchestrator is installed as namespace admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:138 @ 01/23/25 21:16:35.341&#xA;STEP: setting the install values - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:139 @ 01/23/25 21:16:35.341&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:151 @ 01/23/25 21:16:35.341&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploywithsettings &#39;--set rbac.cluster.admin=false --set rbac.namespace.releaseNamespaceAdmin=true&#39;�[0m&#xA;Deploying symphony to minikube with settings, --set rbac.cluster.admin=false --set rbac.namespace.releaseNamespaceAdmin=true&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (335.088938ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest --set rbac.cluster.admin=false --set rbac.namespace.releaseNamespaceAdmin=true&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; has been upgraded. Happy Helming!&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:16:37 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 2&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;&lt; Exit [BeforeAll] when orchestrator is installed as namespace admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:138 @ 01/23/25 21:16:40.454 (5.113s)&#xA;&gt; Enter [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:164 @ 01/23/25 21:16:40.454&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:39 @ 01/23/25 21:16:40.454&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target and scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:45 @ 01/23/25 21:16:40.565&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:52 @ 01/23/25 21:16:40.565&#xA;STEP: setting the instance scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:58 @ 01/23/25 21:16:40.565&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:64 @ 01/23/25 21:16:40.565&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:68 @ 01/23/25 21:16:40.649&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:72 @ 01/23/25 21:16:40.776&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: verifying the resources - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:76 @ 01/23/25 21:16:40.869&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:164 @ 01/23/25 21:17:00.881 (20.427s)&#xA;&gt; Enter [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:17:00.881&#xA;&lt; Exit [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:17:00.881 (0s)&#xA;&gt; Enter [AfterAll] when orchestrator is installed as namespace admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:157 @ 01/23/25 21:17:00.881&#xA;STEP: removing all instances, targets and solutions from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:158 @ 01/23/25 21:17:00.881&#xA;�[35m&gt;�[0m�[1m kubectl delete instances.solution.symphony --all -A�[0m&#xA;instance.solution.symphony &#34;instance&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete targets.fabric.symphony --all -A�[0m&#xA;target.fabric.symphony &#34;target&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete solutions.solution.symphony --all -A�[0m&#xA;solution.solution.symphony &#34;solution-v-v1&#34; deleted&#xA;&lt; Exit [AfterAll] when orchestrator is installed as namespace admin - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:157 @ 01/23/25 21:17:21.294 (20.414s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] RBAC when orchestrator is installed with specific namespace rules when performing CRUD operations it succefully install in default namespace" classname="Scenarios Suite" status="passed" time="85.666835767">
              <system-err>&gt; Enter [BeforeAll] when orchestrator is installed with specific namespace rules - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:181 @ 01/23/25 21:17:21.295&#xA;STEP: setting the install values - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:182 @ 01/23/25 21:17:21.295&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:202 @ 01/23/25 21:17:21.295&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploywithsettings &#39;--set rbac.namespace.namespaces.namespace-a.rules[0].resources[0]=&#34;configmaps&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].verbs[0]=&#34;*&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].apiGroups[0]=&#34;&#34; --set rbac.cluster.admin=false&#39;�[0m&#xA;Deploying symphony to minikube with settings, --set rbac.namespace.namespaces.namespace-a.rules[0].resources[0]=&#34;configmaps&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].verbs[0]=&#34;*&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].apiGroups[0]=&#34;&#34; --set rbac.cluster.admin=false&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (383.228581ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest --set rbac.namespace.namespaces.namespace-a.rules[0].resources[0]=&#34;configmaps&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].verbs[0]=&#34;*&#34; --set rbac.namespace.namespaces.namespace-a.rules[0].apiGroups[0]=&#34;&#34; --set rbac.cluster.admin=false&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; has been upgraded. Happy Helming!&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:17:23 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 3&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;&lt; Exit [BeforeAll] when orchestrator is installed with specific namespace rules - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:181 @ 01/23/25 21:17:26.019 (4.724s)&#xA;&gt; Enter [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:214 @ 01/23/25 21:17:26.019&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:39 @ 01/23/25 21:17:26.019&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target and scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:45 @ 01/23/25 21:17:26.131&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:52 @ 01/23/25 21:17:26.131&#xA;STEP: setting the instance scope - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:58 @ 01/23/25 21:17:26.131&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:64 @ 01/23/25 21:17:26.131&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:68 @ 01/23/25 21:17:26.235&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:72 @ 01/23/25 21:17:26.357&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: verifying the resources - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:76 @ 01/23/25 21:17:26.451&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it succefully install in default namespace - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:214 @ 01/23/25 21:17:46.464 (20.447s)&#xA;&gt; Enter [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:17:46.464&#xA;&lt; Exit [JustAfterEach] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:93 @ 01/23/25 21:17:46.464 (0s)&#xA;&gt; Enter [AfterAll] when orchestrator is installed with specific namespace rules - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:207 @ 01/23/25 21:17:46.464&#xA;STEP: removing all instances, targets and solutions from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:208 @ 01/23/25 21:17:46.464&#xA;�[35m&gt;�[0m�[1m kubectl delete instances.solution.symphony --all -A�[0m&#xA;instance.solution.symphony &#34;instance&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete targets.fabric.symphony --all -A�[0m&#xA;target.fabric.symphony &#34;target&#34; deleted&#xA;�[35m&gt;�[0m�[1m kubectl delete solutions.solution.symphony --all -A�[0m&#xA;solution.solution.symphony &#34;solution-v-v1&#34; deleted&#xA;&lt; Exit [AfterAll] when orchestrator is installed with specific namespace rules - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:207 @ 01/23/25 21:18:06.902 (20.439s)&#xA;&gt; Enter [AfterAll] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:86 @ 01/23/25 21:18:06.902&#xA;STEP: uninstalling orchestrator from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:87 @ 01/23/25 21:18:06.902&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage DumpSymphonyLogsForTest ginkgosuite_rbac�[0m&#xA;&gt; mkdir -p /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807/api.log&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default --previous &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807/api-crash.log&#xA;&gt; kubectl logs &#39;deployment/symphony-controller-manager&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807/k8s.log&#xA;&gt; kubectl logs &#39;deployment/symphony-otel-collector&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807/otel-collector.log&#xA;Cannot collect otel-collector logs: exit status 1, it&#39;s ok when otel-collector is not deployed&#xA;&gt; kubectl logs &#39;ds/symphony-otel-forwarder&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_rbac_20250123211807/otel-forwarder.log&#xA;Cannot to collect otel-forwarder logs: exit status 1, it&#39;s ok when otel-forwarder is not deployed&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage Destroy all,nowait�[0m&#xA;&gt; helm uninstall ecosystem -n default --wait&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;release &#34;ecosystem&#34; uninstalled&#xA;Waiting for all pods to go away...&#xA;All pods are cleaned up:  29.519999579s&#xA;&lt; Exit [AfterAll] RBAC - /mnt/d/code/symphony/test/integration/scenarios/06.ado/rbac_test.go:86 @ 01/23/25 21:18:46.957 (40.057s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Delete when performing create/update operations it should delete the instance when the underlying helm release is already gone" classname="Scenarios Suite" status="passed" time="128.979308791">
              <system-err>&gt; Enter [BeforeAll] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:34 @ 01/23/25 21:18:46.957&#xA;STEP: installing orchestrator in the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:35 @ 01/23/25 21:18:46.957&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage cluster:deploy�[0m&#xA;Deploying symphony to minikube&#xA;&gt; kubectl config use-context minikube&#xA;Switched to context &#34;minikube&#34;.&#xA;[DONE] (381.902086ms) &#39;start minikube&#39;&#xA;&gt; helm upgrade ecosystem ../../packages/helm/symphony --install -n default --create-namespace --wait -f ../../packages/helm/symphony/values.yaml -f symphony-ghcr-values.yaml --set symphonyImage.tag=latest --set paiImage.tag=latest&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;Release &#34;ecosystem&#34; does not exist. Installing it now.&#xA;NAME: ecosystem&#xA;LAST DEPLOYED: Thu Jan 23 21:18:48 2025&#xA;NAMESPACE: default&#xA;STATUS: deployed&#xA;REVISION: 1&#xA;TEST SUITE: None&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-api-serving-cert  -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-api-serving-cert condition met&#xA;&gt; kubectl wait --for=condition=ready certificates symphony-serving-cert -n default --timeout=90s&#xA;certificate.cert-manager.io/symphony-serving-cert condition met&#xA;STEP: setting the default testing lib logger - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:38 @ 01/23/25 21:20:14.708&#xA;&lt; Exit [BeforeAll] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:34 @ 01/23/25 21:20:14.708 (1m27.756s)&#xA;&gt; Enter [It] it should delete the instance when the underlying helm release is already gone - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:131 @ 01/23/25 21:20:14.708&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:60 @ 01/23/25 21:20:14.709&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution created&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:66 @ 01/23/25 21:20:14.803&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:72 @ 01/23/25 21:20:14.803&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:78 @ 01/23/25 21:20:14.803&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:82 @ 01/23/25 21:20:14.803&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target created&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:86 @ 01/23/25 21:20:14.915&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 created&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:90 @ 01/23/25 21:20:15.01&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: verifying the resources before deletion - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:94 @ 01/23/25 21:20:15.1&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 3: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 3 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 3: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 3 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: checking expectation 3 of 3: [helm expectation: ^simple-chart-1$]&#xA;  [helm expectation: ^simple-chart-1$]: --------------------------------------------------------------------------------&#xA;  [helm expectation: ^simple-chart-1$]: Verifying helm release&#xA;  [helm expectation: ^simple-chart-1$]: Found 2 releases&#xA;  [helm expectation: ^simple-chart-1$]: Action Type: *action.List&#xA;  [helm expectation: ^simple-chart-1$]: Found 1 matching releases&#xA;  [helm expectation: ^simple-chart-1$]: Verifying conditions&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [basic condition]&#xA;    [all group]: condition 1 of 1 was satisfied: [basic condition]&#xA;    [all group]: all conditions were satisfied&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [.info.status]&#xA;      [.info.status]: Evaluating jq condition on resource&#xA;      [.info.status]: Comparing deployed with deployed&#xA;    [all group]: condition 1 of 1 was satisfied: [.info.status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 3 of 3 was satisfied [helm expectation: ^simple-chart-1$]&#xA;[all expectation]: all expectations were satisfied&#xA;STEP: deleting the underlying resources - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:98 @ 01/23/25 21:20:45.127&#xA;�[35m&gt;�[0m�[1m helm uninstall simple-chart-1 -n azure-iot-operations --wait�[0m&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;release &#34;simple-chart-1&#34; uninstalled&#xA;STEP: delete the orchestrator resource - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:102 @ 01/23/25 21:20:45.747&#xA;�[35m&gt;�[0m�[1m kubectl delete -f -�[0m&#xA;instance.solution.symphony &#34;instance&#34; deleted&#xA;STEP: verifying the resources after deletion - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:106 @ 01/23/25 21:20:55.924&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 0 matches&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should delete the instance when the underlying helm release is already gone - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:131 @ 01/23/25 21:20:55.93 (41.223s)&#xA;&gt; Enter [JustAfterEach] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:49 @ 01/23/25 21:20:55.93&#xA;&lt; Exit [JustAfterEach] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:49 @ 01/23/25 21:20:55.93 (0s)&#xA;</system-err>
          </testcase>
          <testcase name="[It] Delete when performing create/update operations it should delete the instance when the underlying kubernetes resource is already gone" classname="Scenarios Suite" status="passed" time="71.759423932">
              <system-err>&gt; Enter [It] it should delete the instance when the underlying kubernetes resource is already gone - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:168 @ 01/23/25 21:20:55.93&#xA;STEP: deploy solution container - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:60 @ 01/23/25 21:20:55.93&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solutioncontainer.solution.symphony/solution unchanged&#xA;STEP: setting the components for the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:66 @ 01/23/25 21:20:56.253&#xA;STEP: setting the components for the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:72 @ 01/23/25 21:20:56.253&#xA;STEP: preparing the instance bytes with a new operation id for the test - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:78 @ 01/23/25 21:20:56.253&#xA;STEP: deploying the target - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:82 @ 01/23/25 21:20:56.253&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;target.fabric.symphony/target configured&#xA;STEP: deploying the solution - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:86 @ 01/23/25 21:20:56.399&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;solution.solution.symphony/solution-v-v1 configured&#xA;STEP: deploying the instance - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:90 @ 01/23/25 21:20:56.56&#xA;�[35m&gt;�[0m�[1m kubectl apply -f -�[0m&#xA;instance.solution.symphony/instance created&#xA;STEP: verifying the resources before deletion - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:94 @ 01/23/25 21:20:56.667&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with &lt;nil&gt;&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got nil&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Reconciling&#xA;    [all group]: condition 1 of 1 failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource verification failed: expected Succeeded, got Reconciling&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;STEP: deleting the underlying resources - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:98 @ 01/23/25 21:21:16.676&#xA;�[35m&gt;�[0m�[1m kubectl delete configmap basic-configmap-1 -n azure-iot-operations�[0m&#xA;configmap &#34;basic-configmap-1&#34; deleted&#xA;STEP: delete the orchestrator resource - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:102 @ 01/23/25 21:21:16.801&#xA;�[35m&gt;�[0m�[1m kubectl delete -f -�[0m&#xA;instance.solution.symphony &#34;instance&#34; deleted&#xA;STEP: verifying the resources after deletion - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:106 @ 01/23/25 21:21:26.952&#xA;[all expectation]: checking if all expectations are satisfied&#xA;[all expectation]: checking expectation 1 of 2: [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: --------------------------------------------------------------------------------&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Verifying resource&#xA;  [solution.symphony/v1, Kind=Instance: ^instance$]: Resource matches returned. 0 matches&#xA;[all expectation]: expectation 1 of 2 was satisfied [solution.symphony/v1, Kind=Instance: ^instance$]&#xA;[all expectation]: checking expectation 2 of 2: [fabric.symphony/v1, Kind=Target: ^target$]&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: --------------------------------------------------------------------------------&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Verifying resource&#xA;  [fabric.symphony/v1, Kind=Target: ^target$]: Resource matches returned. 1 matches&#xA;    [all group]: checking if all conditions are satisfied&#xA;    [all group]: checking condition 1 of 1: [Provisioning Status]&#xA;      [Provisioning Status]: Evaluating jq condition on resource&#xA;      [Provisioning Status]: Comparing Succeeded with Succeeded&#xA;    [all group]: condition 1 of 1 was satisfied: [Provisioning Status]&#xA;    [all group]: all conditions were satisfied&#xA;[all expectation]: expectation 2 of 2 was satisfied [fabric.symphony/v1, Kind=Target: ^target$]&#xA;[all expectation]: all expectations were satisfied&#xA;&lt; Exit [It] it should delete the instance when the underlying kubernetes resource is already gone - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:168 @ 01/23/25 21:21:26.955 (31.026s)&#xA;&gt; Enter [JustAfterEach] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:49 @ 01/23/25 21:21:26.955&#xA;&lt; Exit [JustAfterEach] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:49 @ 01/23/25 21:21:26.955 (0s)&#xA;&gt; Enter [AfterAll] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:42 @ 01/23/25 21:21:26.955&#xA;STEP: uninstalling orchestrator from the cluster - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:43 @ 01/23/25 21:21:26.956&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage DumpSymphonyLogsForTest ginkgosuite_delete�[0m&#xA;&gt; mkdir -p /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127/api.log&#xA;&gt; kubectl logs &#39;deployment/symphony-api&#39; --all-containers -n default --previous &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127/api-crash.log&#xA;&gt; kubectl logs &#39;deployment/symphony-controller-manager&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127/k8s.log&#xA;&gt; kubectl logs &#39;deployment/symphony-otel-collector&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127/otel-collector.log&#xA;Cannot collect otel-collector logs: exit status 1, it&#39;s ok when otel-collector is not deployed&#xA;&gt; kubectl logs &#39;ds/symphony-otel-forwarder&#39; --all-containers -n default &gt; /tmp/symphony-integration-test-logs/test_ginkgosuite_delete_20250123212127/otel-forwarder.log&#xA;Cannot to collect otel-forwarder logs: exit status 1, it&#39;s ok when otel-forwarder is not deployed&#xA;�[35m&gt;�[0m�[1m cd /mnt/d/code/symphony/test/localenv &amp;&amp; mage Destroy all,nowait�[0m&#xA;&gt; helm uninstall ecosystem -n default --wait&#xA;WARNING: Kubernetes configuration file is group-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;WARNING: Kubernetes configuration file is world-readable. This is insecure. Location: /home/yanjiaxin/.kube/config&#xA;release &#34;ecosystem&#34; uninstalled&#xA;Waiting for all pods to go away...&#xA;All pods are cleaned up:  29.357109879s&#xA;&lt; Exit [AfterAll] Delete - /mnt/d/code/symphony/test/integration/scenarios/06.ado/delete_test.go:42 @ 01/23/25 21:22:07.685 (40.733s)&#xA;</system-err>
          </testcase>
      </testsuite>
  </testsuites>